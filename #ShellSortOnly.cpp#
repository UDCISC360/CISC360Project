0//Author Eric, Sam
#include <cstdlib>
#include <ctime>
#include <utility>
#include <iostream>
#include <vector>
#include <algorithm>
#include <stdio.h>
#include<omp.h>
#include <stdlib.h>
#include <string.h>

int ITERATE = 20; //number of iterations for each test. 
int LEN_CONST [8] = {100,1000,5000,10000, 50000, 100000, 500000,1000000};
int LEN_CONST_LEN = 8;
int MAXVAL = 10000;
int NUMTHREADS = 8; 

int testArray[3] = {1, 10, 100};
int testArrLen = 3;
std::clock_t start;
std::clock_t end; 
double durationAvg;
double duration;


void shellSort_Par(int a[], int n, int threads)
{
    int i, m;
    #pragma omp parallel shared(a,n) private(i, m) num_threads(threads)
    for(m = n/2; m > 0; m /= 2)
    {
        #pragma omp for
        for(i = 0; i < m; i++)
            insertionsort(&(a[i]), n-i, m);
    }
}

